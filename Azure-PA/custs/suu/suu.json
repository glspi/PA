{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceLocation": {
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "northcentralus",
                "southcentralus",
                "westcentralus",
                "westus",
                "westus2"
            ],
            "metadata": {
                "description": "Region to be used for all resources"
            }
        },
        "vNetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network Name"
            },
            "defaultValue": "virtual-network-name"
        },
        "vNetCIDR": {
            "type": "string",
            "metadata": {
                "description": "Virtual Network CIDR to use"
            },
            "defaultValue":"10.2.0.0/16"
        },
        "managementAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Management Address Prefix"
            },
            "defaultValue":"10.2.9.0/24"
        },
        "managementSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Management Subnet Name"
            },
            "defaultValue": "Management"
        },
        "managementRouteTableName": {
            "type": "string",
            "metadata": {
                "description": "Management Route Table Name"
            },
            "defaultValue": "Management-RT"
        },
        "managementNetworkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Management Network Security Group Name"
            },
            "defaultValue": "Management-NSG"
        },
        "publicAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Public Address Prefix"
            },
            "defaultValue":"10.2.1.0/24"
        },
        "publicSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Public Subnet Name"
            },
            "defaultValue": "Public"
        },
        "publicRouteTableName": {
            "type": "string",
            "metadata": {
                "description": "Public Route Table Name"
            },
            "defaultValue": "Public-RT"
        },
        "publicNetworkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Public Network Security Group Name"
            },
            "defaultValue": "Public-NSG"
        },
        "privateAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Private Address Prefix"
            },
            "defaultValue":"10.2.248.0/24"
        },
        "privateSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Private Subnet Name"
            },
            "defaultValue": "Private"
        },
        "privateRouteTableName": {
            "type": "string",
            "metadata": {
                "description": "Private Route Table Name"
            },
            "defaultValue": "Private-RT"
        },
        "privateNetworkSecurityGroupName": {
            "type": "string",
            "metadata": {
                "description": "Private Network Security Group Name"
            },
            "defaultValue": "Private-NSG"
        },
        "paloVM1Name": {
            "type": "string",
            "metadata": {
                "description": "Firewall Hostname"
            }
        },
        "paloVM2Name": {
            "type": "string",
            "metadata": {
                "description": "Firewall Hostname"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username of the administrator account on the PA"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the administrator account on the PA"
            }
        },
        "fwAvSet": {
            "type": "string",
            "metadata": {
                "description": "Availability Set name for Firewalls"
            },
            "defaultValue": "PA-AvailabilitySet"
        },
        "vmSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D3",
                "Standard_D4",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_A4",
                "Standard_DS3_v2",
                "Standard_DS4_v2"
            ],
            "metadata": {
                "description": "Azure VM Size for VM-Series"
            },
            "defaultValue": "Standard_D3_v2"
        },
        "imageVersion": {
            "type": "string",
            "allowedValues": [
                "latest"
            ],
            "metadata": {
                "description": "PAN OS Version"
            },
            "defaultValue": "latest"
        },
        "imageSku": {
            "type": "string",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2"
            ],
            "metadata": {
                "description": "Firewall License Model"
            },
            "defaultValue": "byol"
        },
        "fw1ManagementPrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Management Static IP Address for PA 1"
            },
            "defaultValue":"10.2.9.10"
        },
        "fw1PublicPrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Public Subnet (private IP) Static IP Address for PA 1"
            },
            "defaultValue":"10.2.1.4"
        },
        "fw1PrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Private Static IP Address for PA 1"
            },
            "defaultValue":"10.2.248.4"
        },
        "fw1ManagementPublicIPName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Public IP for PA 1 Management Interface"
            },
            "defaultValue": "palo1-management-public-ip"
        },
        "fw1UntrustPublicIPName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Public IP for PA 1 Untrust Interface"
            },
            "defaultValue": "palo1-untrust-public-ip"
        },
        "fw2ManagementPrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Management Static IP Address for PA 2"
            },
            "defaultValue":"10.2.9.11"
        },
        "fw2PublicPrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Public Subnet (private IP) Static IP Address for PA 2"
            },
            "defaultValue":"10.2.1.5"
        },
        "fw2PrivateIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Private Static IP Address for PA 2"
            },
            "defaultValue":"10.2.248.5"
        },
        "fw2ManagementPublicIPName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Public IP for PA 2 Management Interface"
            },
            "defaultValue": "palo2-management-public"
        },
        "fw2UntrustPublicIPName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure Public IP for PA 2 Untrust Interface"
            },
            "defaultValue": "palo2-untrust-public"
        },
        "bootstrapStorageAccount": {
            "defaultValue": "cnetpalopublic",
            "type": "string",
            "metadata": {
                "description": "Storage account hosting bootstrap files"
            }
        },
        "storageAccountAccessKey": {
            "type": "string",
            "defaultValue": "+0J9pTzXSoiDLYmlzCt5BIysfbKqbUwjMjV8WTdO1cTJWhoUOZgPSBluLjXoEFsXLWfHx4B6n85AuNn29c1cFQ==",
            "metadata": {
                "description": "Authentication key to access the storage account"
            }
        },
        "storageAccountFileShare": {
            "defaultValue": "bootstrap",
            "type": "string",
            "metadata": {
                "description": "The file share in the storage account where the bootstrap files are located"
            }
        },
        "storageAccountFileShareDirectory": {
            "defaultValue": "suu",
            "type": "string",
            "metadata": {
                "description": "The subdirectory hosting the bootstrap files. Only required if hosting multiple bootstrap directories on the same share"
            }
        },
        "allowManagementFromCIDR": {
            "type": "string",
            "metadata": {
                "description": "On-Premise or other subnet that can manage the PA"
            }
        },
        "externalLBName": {
            "type": "string",
            "defaultValue": "External-LB",
            "metadata": {
                "description": "Name for External Load Balancer"
            }
        },        
        "externalLBPublicIPName": {
            "type": "string",
            "defaultValue": "External-LB-Public-IP-sample",
            "metadata": {
                "description": "Public IP for Web new front-end"
            }
        },
        "externalLBFrontEndName": {
            "type": "string",
            "defaultValue": "External-LB-Frontend-sample",
            "metadata": {
                "description": "Load Balancer Front-End Name for Web"
            }
        },
        "externalLBBackEndName": {
            "type": "string",
            "defaultValue": "Backend-PAs-Public",
            "metadata": {
                "description": "Name for the back-end connection to the PA public IP's"
            }
        },
        "externalhttpsProbeName": {
            "type": "string",
            "defaultValue": "PA-HTTPS-Probe",
            "metadata": {
                "description": "Name for https probe / health check"
            }
        },
        "externalLBRuleName-443": {
            "type": "string",
            "defaultValue": "PA-LBRule-sample-tcp443",
            "metadata": {
                "description": "Name for Load Balancing Rule - Sample - tcp/443"
            }
        },
        "externalLBRuleName-80": {
            "type": "string",
            "defaultValue": "PA-LBRule-sample-80",
            "metadata": {
                "description": "Name for Load Balancing Rule - Sample - tcp/80"
            }
        },
        "internalLBName": {
            "type": "string",
            "defaultValue": "Internal-LB",
            "metadata": {
                "description": "Internal Load Balancer IP Address"
            }
        },
        "internalLBIPAddress": {
            "type": "string",
            "defaultValue": "10.2.248.11",
            "metadata": {
                "description": "Internal Load Balancer IP Address"
            }
        },
        "internalLBFrontEndName": {
            "type": "string",
            "defaultValue": "Internal-LB-Frontend",
            "metadata": {
                "description": "Load Balancer Front-End Name for Internal-LB"
            }
        },
        "internalLBBackEndName": {
            "type": "string",
            "defaultValue": "Backend-PAs-Private",
            "metadata": {
                "description": "Name for the back-end connection to the PA private IP's"
            }
        },
        "internalhttpsProbeName": {
            "type": "string",
            "defaultValue": "PA-HTTPS-Probe",
            "metadata": {
                "description": "Name for https probe / health check"
            }
        },
        "internalLBRuleName": {
            "type": "string",
            "defaultValue": "PA-Internal-LBRule",
            "metadata": {
                "description": "Name for Internal Load Balancing Rule - All ports"
            }
        }
    },
    "variables": {
        "imagePublisher": "paloaltonetworks",
        "imageOffer": "vmseries1",
        "fw1NicName": "[concat(parameters('paloVM1Name'), '-eth')]",
        "fw2NicName": "[concat(parameters('paloVM2Name'), '-eth')]",
        "customDataField1": "[concat('storage-account=', parameters('bootstrapStorageAccount'), ',access-key=', parameters('storageAccountAccessKey'), ',file-share=', parameters('storageAccountFileShare'),',share-directory=', parameters('storageAccountFileShareDirectory'),'/fw1')]",
        "customDataField2": "[concat('storage-account=', parameters('bootstrapStorageAccount'), ',access-key=', parameters('storageAccountAccessKey'), ',file-share=', parameters('storageAccountFileShare'),',share-directory=', parameters('storageAccountFileShareDirectory'),'/fw2')]"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('fwAvSet')]",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": "2",
                "platformUpdateDomainCount": "2"
            }
        },
         {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('publicNetworkSecurityGroupName')]",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAll-Inbound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 100
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('managementNetworkSecurityGroupName')]",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-HTTPS-Inbound",
                        "properties": {
                            "protocol": "tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "[parameters('allowManagementFromCIDR')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 100,
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-SSH-Inbound",
                        "properties": {
                            "protocol": "tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "[parameters('allowManagementFromCIDR')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 101,
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2017-06-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('privateNetworkSecurityGroupName')]",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "securityRules": [
                ]
            }
        },
        {
            "name": "[parameters('fw1ManagementPublicIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('fw1UntrustPublicIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('fw2ManagementPublicIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('fw2UntrustPublicIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "name": "[parameters('privateRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "routes": [
                    {
                        "name": "Default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('internalLBIPAddress')]"
                        }
                    },
                    {
                        "name": "Blackhole-Management",
                        "properties": {
                            "addressPrefix": "[parameters('managementAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    },
                    {
                        "name": "Blackhole-Public",
                        "properties": {
                            "addressPrefix": "[parameters('publicAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "name": "[parameters('managementRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "routes": [
                    {
                        "name": "Blackhole-Public",
                        "properties": {
                            "addressPrefix": "[parameters('publicAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    },
                    {
                        "name": "Blackhole-Private",
                        "properties": {
                            "addressPrefix": "[parameters('privateAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    },
                    {
                        "name": "On-Prem-Connectivity",
                        "properties": {
                            "addressPrefix": "10.0.0.0/8",
                            "nextHopType": "VirtualNetworkGateway"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "name": "[parameters('publicRouteTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "routes": [
                    {
                        "name": "Blackhole-Management",
                        "properties": {
                            "addressPrefix": "[parameters('managementAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    },
                    {
                        "name": "Blackhole-Private",
                        "properties": {
                            "addressPrefix": "[parameters('privateAddressPrefix')]",
                            "nextHopType": "None"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "apiVersion": "2016-12-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('vNetName')]",
            "location": "[parameters('resourceLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/routeTables/', parameters('privateRouteTableName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('managementRouteTableName'))]",
                "[concat('Microsoft.Network/routeTables/', parameters('publicRouteTableName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('publicNetworkSecurityGroupName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('privateNetworkSecurityGroupName'))]",
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('managementNetworkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vNetCIDR')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('managementSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('managementAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables/', parameters('managementRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('managementNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('publicSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('publicAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables/', parameters('publicRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('publicNetworkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('privateSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('privateAddressPrefix')]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables/', parameters('privateRouteTableName'))]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups/', parameters('privateNetworkSecurityGroupName'))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Web",
                                    "locations": [
                                        "*"
                                    ]
                                }
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw1NicName'), '0')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('fw1ManagementPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw1ManagementPrivateIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('fw1ManagementPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'), parameters('managementSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw1NicName'), '1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('fw1UntrustPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/', parameters('externalLBName'))]"
            ],
            "apiVersion": "2015-06-15",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-public",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw1PublicPrivateIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('fw1UntrustPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'),parameters('publicSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLBName')), concat('/backendAddressPools/', parameters('externalLBBackEndName')))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw1NicName'), '2')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/', parameters('internalLBName'))]"
            ],
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-private",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw1PrivateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'), parameters('privateSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), concat('/backendAddressPools/', parameters('internalLBBackEndName')))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw2NicName'), '0')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('fw2ManagementPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig-mgmt",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw2ManagementPrivateIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('fw2ManagementPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'), parameters('managementSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw2NicName'), '1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('fw2UntrustPublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/', parameters('externalLBName'))]"
            ],
            "apiVersion": "2015-06-15",
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-public",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw2PublicPrivateIPAddress')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('fw2UntrustPublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'),parameters('publicSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLBName')), concat('/backendAddressPools/', parameters('externalLBBackEndName')))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('fw2NicName'), '2')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('resourceLocation')]",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[resourceId('Microsoft.Network/loadBalancers/', parameters('internalLBName'))]"
            ],
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig-private",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fw2PrivateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'), parameters('privateSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), concat('/backendAddressPools/', parameters('internalLBBackEndName')))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('paloVM1Name')]",
            "location": "[parameters('resourceLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw1NicName'), '0')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw1NicName'), '1')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw1NicName'), '2')]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
            ],
            "plan": {
                "name": "[parameters('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('paloVM1Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(variables('customDataField1'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw1NicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw1NicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw1NicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('paloVM2Name')]",
            "location": "[parameters('resourceLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw2NicName'), '0')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw2NicName'), '1')]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('fw2NicName'), '2')]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
            ],
            "plan": {
                "name": "[parameters('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets/', parameters('fwAvSet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('paloVM2Name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(variables('customDataField2'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw2NicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw2NicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('fw2NicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2018-12-01",
            "name": "[parameters('internalLBName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('internalLBFrontEndName')]",
                        "properties": {
                            "privateIPAddress": "[parameters('internalLBIPAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/',parameters('vNetName'), parameters('privateSubnetName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('internalLBBackEndName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', parameters('internalLBName')), concat('/frontendIpConfigurations/', parameters('internalLBFrontEndName')))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLBName')), concat('/backendAddressPools/', parameters('internalLBBackEndName')))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', parameters('internalLBName')), concat('/probes/', parameters('internalhttpsProbeName')))]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "idleTimeoutInMinutes": 15
                        },
                        "name": "[parameters('internalLBRuleName')]"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "[parameters('internalhttpsProbeName')]"
                    }
                ]
            }
        },
        {
            "name": "[parameters('externalLBPublicIPName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-10-01",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "apiVersion": "2018-12-01",
            "name": "[parameters('externalLBName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('resourceLocation')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', parameters('vNetName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses/', parameters('externalLBPublicIPName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('externalLBFrontEndName')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('externalLBPublicIPName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('externalLBBackEndName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', parameters('externalLBName')), concat('/frontendIpConfigurations/', parameters('externalLBFrontEndName')))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', parameters('externalLBName')), concat('/backendAddressPools/', parameters('externalLBBackEndName')))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers/', parameters('externalLBName')), concat('/probes/', parameters('externalhttpsProbeName')))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 15,
                            "enableFloatingIP": true
                        },
                        "name": "[parameters('externalLBRuleName-443')]"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLBName')), concat('/frontendIpConfigurations/', parameters('externalLBFrontEndName')))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLBName')), concat('/backendAddressPools/', parameters('externalLBBackEndName')))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('externalLBName')), concat('/probes/', parameters('externalhttpsProbeName')))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 15,
                            "enableFloatingIP": true
                        },
                        "name": "[parameters('externalLBRuleName-80')]"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 443,
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        },
                        "name": "[parameters('externalhttpsProbeName')]"
                    }
                ]
            }
        }
    ]
}